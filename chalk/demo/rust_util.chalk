// ?F in_list: ?L
//
// Lists are actually trees and have the form:
//
// ```
// L<M> = M
//      | [L, L]
//      | Nil
// ```
//
// Here we search for members. This only works well if the list is
// not being inferred, of course.
?A in_list: [?A, ?L].
?A in_list: [?B, ?L] :- ?A in_list: ?L.
?A in_list: [?L, ?B] :- ?A in_list: ?L.

// Maps:
//
// Maps are lists of `A = B` pairs. In Rust mode,
// at least, they must not contain more than one
// entry for the same key.
map: ?M contains_key: ?K with_value: ?V :-
    (?K = ?V) in_list: ?M.

// Unification.
?A = ?A.
?A != ?B :- !{?A = ?B}.